sudo: required

language: python

env:
  - GUEST_OS=ubuntu-16.04
  - GUEST_OS=ubuntu-18.04

matrix:
  allow_failures:
    - env: GUEST_OS=ubuntu-18.04

cache:
  apt: true
  pip: true
  directories:
    - "$HOME/.composer/cache"

services:
  - docker

before_install:
  # Update composer
  - phpenv config-rm xdebug.ini
  - composer self-update
  # Download and register Oracle VirtualBox keys
  - wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add -
  - wget -q https://www.virtualbox.org/download/oracle_vbox.asc -O- | sudo apt-key add -
  # Add Oracle VirtualBox repository
  - sudo add-apt-repository "deb http://download.virtualbox.org/virtualbox/debian trusty contrib"
  # Update apt-get
  - sudo apt-get update -qq
  # Install Linux headers
  - sudo apt-get -y --force-yes install linux-headers-`uname -r`
  # Install VirtualBox 5.1
  - sudo apt-get install virtualbox-5.1
  # Install Vagrant 2.0.0
  # Todo: install from a package repository, not from a hardcoded URL.
  - curl -O https://releases.hashicorp.com/vagrant/2.0.0/vagrant_2.0.0_x86_64.deb
  - sudo dpkg -i vagrant_2.0.0_x86_64.deb
  # Install Docker engine
  - sudo apt-get install -o Dpkg::Options::="--force-confold" --force-yes -y docker-ce

install:
  - composer install --no-interaction --no-progress --no-suggest
  - pip install docker
  - pip install 'molecule<2.0.0'

before_script:
  - cp ./provisioning/molecule-${GUEST_OS}.yml ./provisioning/molecule.yml

script:
  - composer validate --no-check-all --ansi
  - vagrant status
  - cd provisioning
  - molecule test
